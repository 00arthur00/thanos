syntax = "proto3";
package thanos;

option go_package = "storepb";

import "gogoproto/gogo.proto";

message Label {
  string name  = 1;
  string value = 2;
}

message Chunk {
  enum Encoding {
    XOR = 0;
  }
  int64 min_time = 1;
  int64 max_time = 2;
  Encoding type  = 3;
  bytes data     = 4;
}

enum Aggregate {
  Raw     = 0;
  Count   = 1;
  Sum     = 2;
  Min     = 3;
  Max     = 4;
  Counter = 5;
}

// AggrChunk represents a chunk of sample data for a series. It may contain the raw
// data or a set of time-aggregations over it, i.e. downsampled date.
// Not all fields may be set depending on the requested data.
message AggrChunk {
  Chunk raw     = 1 [(gogoproto.nullable) = false];
  Chunk sum     = 2 [(gogoproto.nullable) = false];
  Chunk count   = 3 [(gogoproto.nullable) = false];
  Chunk min     = 4 [(gogoproto.nullable) = false];
  Chunk max     = 5 [(gogoproto.nullable) = false];
  Chunk counter = 6 [(gogoproto.nullable) = false];
}

// Series represents a time series with chunks encoding its raw sample data.
message Series {
  repeated Label      labels = 1 [(gogoproto.nullable) = false];
  repeated Chunk chunks = 2 [(gogoproto.nullable) = false];
}

// Matcher specifies a rule, which can match or set of labels or not.
message LabelMatcher {
  enum Type {
    EQ  = 0; // =
    NEQ = 1; // !=
    RE  = 2; // =~
    NRE = 3; // !~
  }
  Type type    = 1;
  string name  = 2;
  string value = 3;
}
